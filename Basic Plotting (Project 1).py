# -*- coding: utf-8 -*-
"""RaspberryCanary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dMdsX-LNZb-_9hThp8rubugRNkl93JBF
"""

#Raspberry Canary, Sept 8th, Challenge 1
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import math
import matplotlib.style as style

df = pd.read_csv('/content/RaspberryCanary_ch1.csv')

#Check it has all been loaded in
df.sample(5)

#All looks good. Let's get to plotting

plt.figure(figsize=(10,10))
# plt.scatter('ms', 'freq', data=df)

#I kinda want to use a regplot from seaborn to see the trend, find which frequency is doing something

sns.distplot(df.freq)

#Just based on what I'm seeing here, I can tell the higher frequency is the true signal and the lower is the noise.

#Remove the noise
df = df.loc[(df['freq']>50)]
df.shape

df

df.freq.value_counts()

#Now that we have our signal, we can go ahead and plot it all out.
mean = df.groupby('ms',as_index=False).agg({'amplitude':'mean'})

#Build the plot (I like fivethirtyeight style in MPL)
fig, ax = plt.subplots(figsize=(10,10))
style.use('fivethirtyeight')
sns.scatterplot('ms','amplitude',data=df,color='r')
sns.lineplot('ms','amplitude',data=mean,alpha=.7)
plt.title('Plotting Radio Frequency over Time (Noise Removed)')
plt.xlabel('Amplitude')
plt.ylabel('Millisecons (ms)')